{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "alias": {
      "defaultValue": null,
      "type": "string",
      "minLength": 3,
      "maxLength": 9
    },
    "username": {
      "defaultValue": "s2admin",
      "type": "string"
    },
    "password": {
      "defaultValue": "S2@dmins2@dmin",
      "type": "string"
    },
    "vmusername": {
      "defaultValue": "demouser",
      "type": "String"
    },
    "vmpassword": {
      "defaultValue": "Password.1!!",
      "type": "SecureString"
    },
    "azureUsername": {
      "type": "String"
    },
    "azurePassword": {
      "type": "SecureString"
    },
    "trainerUserName": {
      "type": "string"
    },
    "trainerUserPassword": {
      "type": "securestring"
    },
    "InstallCloudLabsShadow": {
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "type": "String"
    },
    "odlId": {
      "type": "String"
    },
    "deploymentID": {
      "type": "String"
    }
  },
  "variables": {
    "azureSubscriptionID": "[subscription().subscriptionId]",
    "azureTenantID": "[subscription().tenantId]",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "publicIpAddressName": "[concat('oilwells-mon-ip-', parameters('alias'))]",
    "dnsNameForPublicIP": "[concat('labvm-', uniqueString(resourceGroup().id))]",
    "postInstallParameters": "[concat(' -azureUsername ', parameters('username'), ' -azurePassword ', parameters('password'), ' -azureTenantID ', variables('azureTenantID'), ' -azureSubscriptionID ', variables('azureSubscriptionID'))]",
    "automationMap": {
      "eastus": { "region": "East US 2" },
      "southcentralus": { "region": "South Central US" },
      "westcentralus": { "region": "West Cental US" },
      "westus2": { "region": "West US 2" },
      "westus": { "region": "West US" }
    },
    "cloudlabsCommon": "[concat(' -odlId ', parameters('odlId'), ' -deploymentID ', parameters('deploymentID'),' -InstallCloudLabsShadow ', parameters('InstallCloudLabsShadow'), ' -location ', variables('location'), ' -RGName ', variables('resourceGroupName'))]",
    "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('vmusername'), ' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]"
  },
  "resources": [
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "apiVersion": "2018-08-15-preview",
      "name": "[concat('oilwells-timeseries-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "capacity": 1
      },
      "kind": "Standard",
      "properties": {
        "storageLimitExceededBehavior": "PurgeOldData",
        "dataRetentionTime": "P30D"
      }
    },
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "apiVersion": "2016-11-01",
      "name": "[concat('oilwellsadls', parameters('alias'))]",
      "location": "eastus2",
      "properties": {}
    },
    {
      "type": "Microsoft.DataLakeAnalytics/accounts",
      "apiVersion": "2016-11-01",
      "name": "[concat('oilwellsdla', parameters('alias'))]",
      "location": "eastus2",
      "properties": {
        "defaultDataLakeStoreAccount": "[concat('oilwellsadls', parameters('alias'))]",
        "dataLakeStoreAccounts": [
          { "name": "[concat('oilwellsadls', parameters('alias'))]" }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DataLakeStore/accounts', concat('oilwellsadls', parameters('alias')))]"
      ]
    },
    {
      "type": "Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts",
      "apiVersion": "2016-11-01",
      "name": "[concat('oilwellsdla', parameters('alias'), '/', 'adls')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataLakeAnalytics/accounts', concat('oilwellsdla', parameters('alias')))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2018-04-01",
      "name": "[concat('oilwells-iothub-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "operationsMonitoringProperties": {
          "events": {
            "None": "None",
            "Connections": "None",
            "DeviceTelemetry": "None",
            "C2DCommands": "None",
            "DeviceIdentityOperations": "None",
            "FileUploadOperations": "None",
            "Routes": "None"
          }
        },
        "ipFilterRules": [],
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[concat('oilwells-iothub-', parameters('alias'))]",
            "endpoint": "sb://iothub-ns-oilwells-c-1716786-f977e83dd2.servicebus.windows.net/"
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 1,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[concat('oilwells-iothub-', parameters('alias'), '-operationmonitoring')]",
            "endpoint": "sb://iothub-ns-oilwells-c-1716786-f977e83dd2.servicebus.windows.net/"
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "eventHubs": [],
            "storageContainers": []
          },
          "routes": [],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": [
              "events"
            ],
            "isEnabled": true
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "",
            "containerName": ""
          }
        },
        "messagingEndpoints": {
          "fileNotifications": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "enableFileUploadNotifications": false,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "features": "None"
      }
    },
    {
      "type": "Microsoft.Devices/provisioningServices",
      "apiVersion": "2017-11-15",
      "name": "[concat('oilwells-prov-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "iotHubs": []
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "name": "[concat('oilwells-cosmos-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "Core (SQL)"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": true,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[concat('oilwells-eventsns-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[concat('oilwells-vault-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
        "accessPolicies": [
          {
            "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
            "objectId": "c1c8abcf-aa1f-443b-aa47-93df8879d9b2",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false
      }
    },
    {
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2018-05-01",
      "name": "[concat('oilwells-maps-', parameters('alias'))]",
      "location": "global",
      "sku": {
        "name": "s1",
        "tier": "Standard"
      },
      "properties": {
        "x-ms-client-id": "52a5c256-d95d-4dc9-9dac-3b1d5b6c4961"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-nsg-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "provisioningState": "Succeeded",
        "resourceGuid": "1573ade0-fb1a-4c2f-b7ce-3973c416a66a",
        "securityRules": [
          {
            "name": "Port_22",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_3389",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
            "properties": {
              "provisioningState": "Succeeded",
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-d01-ip-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-d02-ip-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-mon-ip-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-edge-ip-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-vnet-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "provisioningState": "Succeeded",
        "resourceGuid": "2d158c43-a365-4e6d-81ed-ed0a8519e53a",
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/24"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "delegations": []
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "microsoft.operationalinsights/workspaces",
      "apiVersion": "2015-11-01-preview",
      "name": "[concat('oilwells-logging-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
      "apiVersion": "2015-11-01-preview",
      "name": "[concat('oilwells-logging-', parameters('alias'), '/' , 'Automation')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', concat('oilwells-automation-', parameters('alias')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', concat('oilwells-automation-', parameters('alias')))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2015-10-31",
      "name": "[concat('oilwells-automation-', parameters('alias'))]",
      "location": "[variables('automationMap')[resourceGroup().location].region]",
      "properties": {
        "sku": {
          "name": "Basic"
        }
      },
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', concat('oilwells-logging-', parameters('alias')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[concat('oilwellsstorage', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2016-03-01",
      "name": "[concat('oilwells-analytics-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.1"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[concat('oilwells-appsvc-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "P1v2",
        "tier": "PremiumV2",
        "size": "P1v2",
        "family": "Pv2",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "name": "[concat('oilwells-appsvc-', parameters('alias'))]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat('oilwells-eventsns-', parameters('alias'), '/RootManageSharedAccessKey')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', concat('oilwells-eventsns-', parameters('alias')))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-vnet-', parameters('alias'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', concat('oilwells-vnet-', parameters('alias')))]"
      ],
      "properties": {
        "provisioningState": "Succeeded",
        "addressPrefix": "10.1.0.0/24",
        "delegations": []
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[concat('oilwells-server-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-mon-nic-', parameters('alias')))]",
        "[resourceId('Microsoft.Storage/StorageAccounts', concat('oilwellsstorage', parameters('alias')))]"
      ],
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('oilwells-server-', parameters('alias'),'/', 'winExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "comments": "Script",
          "tags": {
            "displayName": "VM Extension"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'oilwells-server-', parameters('alias'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://experienceazure.blob.core.windows.net/templates/cloudlabs-common/cloudlabs-windows-functions.ps1",
                "https://experienceazure.blob.core.windows.net/templates/mcw-Securing-the-IoT-end-to-end/scripts/psscript-01.ps1"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File mcw-Securing-the-IoT-end-to-end/scripts/psscript-01.ps1', variables('postInstallParameters'))]"
            }
          }
        }
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "20h1-pro-g2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat('oilwells-server-', parameters('alias'), '_OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 200
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[concat('server-', parameters('alias'))]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]",
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-mon-nic-', parameters('alias')))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-span-nic-', parameters('alias')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', 'oilwellsstorage', parameters('alias'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[concat('oilwells-edgevm-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-edge-nic-', parameters('alias')))]",
        "[resourceId('Microsoft.Storage/StorageAccounts', concat('oilwellsstorage', parameters('alias')))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B1ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat('oilwells-edgevm-', parameters('alias'), '_OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[concat('oilwells-edgevm-', parameters('alias'))]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-edge-nic-', parameters('alias')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', 'oilwellsstorage', parameters('alias'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[concat('oilwells-d01-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-d01-nic-', parameters('alias')))]",
        "[resourceId('Microsoft.Storage/StorageAccounts', concat('oilwellsstorage', parameters('alias')))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B1ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat('oilwells-d01-', parameters('alias'), '_OsDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[concat('oilwells-d01-', parameters('alias'))]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-d01-nic-', parameters('alias')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', 'oilwellsstorage', parameters('alias'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-mon-nic-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-mon-ip-', parameters('alias')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-mon-ip-', parameters('alias')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
        },
        "primary": true,
        "tapConfigurations": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-d01-nic-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-d01-ip-', parameters('alias')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-d01-ip-', parameters('alias')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
        },
        "primary": true,
        "tapConfigurations": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-edge-nic-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-edge-ip-', parameters('alias')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.6",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-edge-ip-', parameters('alias')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
        },
        "primary": true,
        "tapConfigurations": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-span-nic-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
        },
        "primary": true,
        "tapConfigurations": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-02-01",
      "name": "[concat('oilwells-d02-nic-', parameters('alias'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-d02-ip-', parameters('alias')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-d02-ip-', parameters('alias')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
        },
        "primary": true,
        "tapConfigurations": []
      }
    }
  ],
  "outputs": {
    "oilwells-server-DNS Name": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName'), '2016-03-30').dnsSettings.fqdn]"
    },
    "oilwells-server Username": {
      "type": "string",
      "value": "[parameters('vmusername')]"
    },
    "oilwells-server Password": {
      "type": "string",
      "value": "[parameters('vmpassword')]"
    },
    "EdgeVM Admin Username": {
      "value": "[parameters('username')]",
      "type": "string"
    },
    "EdgeVM Admin Password": {
      "value": "[parameters('password')]",
      "type": "string"
    },
    "DeploymentID": {
      "type": "String",
      "value": "[parameters('deploymentID')]"
    }
  }
}
